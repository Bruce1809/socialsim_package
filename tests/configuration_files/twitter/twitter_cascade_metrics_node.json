[
    {
        "cascade_max_depth_over_time": {
            "scale": "node",
            "node_type": "Cascade",
            "measurement": "get_node_level_measurements",
            "measurement_args": {
                "single_cascade_measurement": "cascade_timeseries_of",
                "attribute": "depth",
                "time_granularity": "H"
            },
            "temporal_vs_batch": "Temporal",
            "metrics": {
                "rmse": {
                    "metric": "rmse",
                    "metric_args": {
                        "join": "inner",
                        "fill_value": 0,
                        "relative": false
                    }
                },
                "nrmse": {
                    "metric": "rmse",
                    "metric_args": {
                        "join": "inner",
                        "fill_value": 0,
                        "relative": false
                    }
                },
                "r2": {
                    "metric": "r2",
                    "metric_args": {
                        "join": "inner",
                        "fill_value": 0
                    }
                }
            }
        }
    },
    {
        "cascade_breadth_by_time": {
            "scale": "node",
            "node_type": "Cascade",
            "measurement": "get_node_level_measurements",
            "measurement_args": {
                "single_cascade_measurement": "cascade_timeseries_of",
                "attribute": "breadth",
                "time_granularity": "H"
            },
            "temporal_vs_batch": "Temporal",
            "metrics": {
                "rmse": {
                    "metric": "rmse",
                    "metric_args": {
                        "join": "inner",
                        "fill_value": 0,
                        "relative": false
                    }
                },
                "nrmse": {
                    "metric": "rmse",
                    "metric_args": {
                        "join": "inner",
                        "fill_value": 0,
                        "relative": false
                    }
                },
                "r2": {
                    "metric": "r2",
                    "metric_args": {
                        "join": "inner",
                        "fill_value": 0
                    }
                }
            }
        }
    },
    {
        "cascade_structural_virality_over_time": {
            "scale": "node",
            "node_type": "Cascade",
            "measurement": "get_node_level_measurements",
            "measurement_args": {
                "single_cascade_measurement": "cascade_timeseries_of",
                "attribute": "structural_virality",
                "time_granularity": "H"
            },
            "temporal_vs_batch": "Temporal",
            "metrics": {
                "rmse": {
                    "metric": "rmse",
                    "metric_args": {
                        "join": "inner",
                        "fill_value": 0,
                        "relative": false
                    }
                },
                "nrmse": {
                    "metric": "rmse",
                    "metric_args": {
                        "join": "inner",
                        "fill_value": 0,
                        "relative": false
                    }
                },
                "r2": {
                    "metric": "r2",
                    "metric_args": {
                        "join": "inner",
                        "fill_value": 0
                    }
                }
            }
        }
    },
    {
        "cascade_size_over_time": {
            "scale": "node",
            "node_type": "Cascade",
            "measurement": "get_node_level_measurements",
            "measurement_args": {
                "single_cascade_measurement": "cascade_timeseries_of",
                "attribute": "size",
                "time_granularity": "H"
            },
            "temporal_vs_batch": "Temporal",
            "metrics": {
                "rmse": {
                    "metric": "rmse",
                    "metric_args": {
                        "join": "inner",
                        "fill_value": 0,
                        "relative": false
                    }
                },
                "nrmse": {
                    "metric": "rmse",
                    "metric_args": {
                        "join": "inner",
                        "fill_value": 0,
                        "relative": false
                    }
                },
                "r2": {
                    "metric": "r2",
                    "metric_args": {
                        "join": "inner",
                        "fill_value": 0
                    }
                }
            }
        }
    },
    {
        "cascade_uniq_users_by_time": {
            "scale": "node",
            "node_type": "Cascade",
            "measurement": "get_node_level_measurements",
            "measurement_args": {
                "single_cascade_measurement": "cascade_timeseries_of",
                "attribute": "unique_nodes",
                "time_granularity": "H"
            },
            "temporal_vs_batch": "Temporal",
            "metrics": {
                "rmse": {
                    "metric": "rmse",
                    "metric_args": {
                        "join": "inner",
                        "fill_value": 0,
                        "relative": false
                    }
                },
                "nrmse": {
                    "metric": "rmse",
                    "metric_args": {
                        "join": "inner",
                        "fill_value": 0,
                        "relative": false
                    }
                },
                "r2": {
                    "metric": "r2",
                    "metric_args": {
                        "join": "inner",
                        "fill_value": 0
                    }
                }
            }
        }
    },
    {
        "cascade_new_user_ratio_by_time": {
            "scale": "node",
            "node_type": "Cascade",
            "measurement": "get_node_level_measurements",
            "measurement_args": {
                "single_cascade_measurement": "cascade_timeseries_of",
                "attribute": "new_node_ratio",
                "time_granularity": "H"
            },
            "temporal_vs_batch": "Temporal",
            "metrics": {
                "rmse": {
                    "metric": "rmse",
                    "metric_args": {
                        "join": "inner",
                        "fill_value": 0,
                        "relative": false
                    }
                },
                "nrmse": {
                    "metric": "rmse",
                    "metric_args": {
                        "join": "inner",
                        "fill_value": 0,
                        "relative": false
                    }
                },
                "r2": {
                    "metric": "r2",
                    "metric_args": {
                        "join": "inner",
                        "fill_value": 0
                    }
                }
            }
        }
    },
    {
        "cascade_breadth_by_depth": {
            "scale": "node",
            "node_type": "Cascade",
            "measurement": "get_node_level_measurements",
            "measurement_args": {
                "single_cascade_measurement": "cascade_depth_by",
                "attribute": "breadth"
            },
            "temporal_vs_batch": "Batch",
            "metrics": {
                "rmse": {
                    "metric": "rmse",
                    "metric_args": {
                        "join": "inner",
                        "fill_value": 0,
                        "relative": false
                    }
                },
                "nrmse": {
                    "metric": "rmse",
                    "metric_args": {
                        "join": "inner",
                        "fill_value": 0,
                        "relative": false
                    }
                },
                "r2": {
                    "metric": "r2",
                    "metric_args": {
                        "join": "inner",
                        "fill_value": 0
                    }
                }
            }
        }
    },
    {
        "cascade_new_user_ratio_by_depth": {
            "scale": "node",
            "node_type": "Cascade",
            "measurement": "get_node_level_measurements",
            "measurement_args": {
                "single_cascade_measurement": "cascade_depth_by",
                "attribute": "new_node_ratio"
            },
            "temporal_vs_batch": "Batch",
            "metrics": {
                "rmse": {
                    "metric": "rmse",
                    "metric_args": {
                        "join": "inner",
                        "fill_value": 0,
                        "relative": false
                    }
                },
                "nrmse": {
                    "metric": "rmse",
                    "metric_args": {
                        "join": "inner",
                        "fill_value": 0,
                        "relative": false
                    }
                },
                "r2": {
                    "metric": "r2",
                    "metric_args": {
                        "join": "inner",
                        "fill_value": 0
                    }
                }
            }
        }
    },
    {
        "cascade_uniq_users_by_depth": {
            "scale": "node",
            "node_type": "Cascade",
            "measurement": "get_node_level_measurements",
            "measurement_args": {
                "single_cascade_measurement": "cascade_depth_by",
                "attribute": "unique_nodes"
            },
            "temporal_vs_batch": "Batch",
            "metrics": {
                "rmse": {
                    "metric": "rmse",
                    "metric_args": {
                        "join": "inner",
                        "fill_value": 0,
                        "relative": false
                    }
                },
                "nrmse": {
                    "metric": "rmse",
                    "metric_args": {
                        "join": "inner",
                        "fill_value": 0,
                        "relative": false
                    }
                },
                "r2": {
                    "metric": "r2",
                    "metric_args": {
                        "join": "inner",
                        "fill_value": 0
                    }
                }
            }
        }
    },
    {
        "cascade_participation_gini": {
            "scale": "node",
            "node_type": "Cascade",
            "measurement": "get_node_level_measurements",
            "measurement_args": {
                "single_cascade_measurement": "cascade_participation_gini"
            },
            "temporal_vs_batch": "Batch",
            "metrics": {
                "absolute_percentage_error": {
                    "metric": "absolute_percentage_error",
                    "metric_args": {}
                },
                "absolute_difference": {
                    "metric": "absolute_difference",
                    "metric_args": {}
                }
            }
        }
    },
    {
        "cascade_participation_palma": {
            "scale": "node",
            "node_type": "Cascade",
            "measurement": "get_node_level_measurements",
            "measurement_args": {
                "single_cascade_measurement": "cascade_participation_palma"
            },
            "temporal_vs_batch": "Batch",
            "metrics": {
                "absolute_percentage_error": {
                    "metric": "absolute_percentage_error",
                    "metric_args": {}
                },
                "absolute_difference": {
                    "metric": "absolute_difference",
                    "metric_args": {}
                }
            }
        }
    }
]